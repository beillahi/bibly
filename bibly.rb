#!/usr/bin/env ruby

require 'optparse'
require 'uri'
require 'open-uri'
require 'nokogiri'

RESOURCES = {
  DBLP: 'http://dblp.uni-trier.de/rec/bibtex1/'
}

SELECTOR = '#bibtex-section > pre'

def get(entry)
  m = entry.match(/\A(?<repo>\w*):(?<key>.*)\z/) || {repo: '', key: ''}
  repo, key = m[:repo].to_sym, m[:key]

  begin
    raise "uknown repository '#{repo}'" unless RESOURCES[repo]
    Nokogiri::HTML(open(URI.join(RESOURCES[repo], key)))
    .css(SELECTOR)
    .first
    .text
  rescue OpenURI::HTTPError
    STDERR.puts "WARNING: no record found in '#{repo}' for key '#{key}'"
  rescue StandardError => e
    STDERR.puts "WARNING: #{e} for entry #{entry}"
  end
end

OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename $0} [options] FILES"
  opts.separator ""
  opts.on("-h", "--help", "Show this message.") do
    puts opts
    exit
  end
end.parse!

puts "% Generated by Bibly (https://github.com/michael-emmi/bibly)"

ARGF.to_a.uniq.each do |key|
  puts get(key.strip)
end
